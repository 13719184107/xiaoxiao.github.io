[{"title":"从正四菱柱到正n菱柱","url":"http://yoursite.com/2019/08/06/css-prism/","content":"<p>最近有时间又在复习c3变换的东西，虽说之前也浅浅的学过，但是这次实践起来发现还是有很多东西没有真正的理解，而有些东西被淡忘在闲置的时光里。虽然现在有很多东西不会，在大前端的知识海洋里，自己宛若一只蝼蚁，但也不反感现在的状态。每天早上小跑一回儿，也许没啥用，但也不勉强自己，只求个积少成多。学习进度按自己的节奏来，虽说速度是慢了些，但也无愧于心，只求今天比昨天好。每天学习一点点，重拾那些丢失的记忆。。。</p>\n<h1 id=\"一、认识变换\"><a href=\"#一、认识变换\" class=\"headerlink\" title=\"一、认识变换\"></a>一、认识变换</h1><p>大概好些年前，我们看的电影还是2d形式的，现在3d电影已是遍布全国，给人身临其境的体验。在css的世界里，也有2d，3d的概念，2d顾名思义就是两个维度(x,y)，两个维度构成一个面，而在3d的世界里比2d多了一个维度(z)，给人展现立体的效果。小时候学习立体几何的时候最先接触的是正方体，长方体，菱柱这些。。。那如何在浏览器中构建这样的立体效果呢？那先来了解几个属性。</p>\n<h2 id=\"1、transform\"><a href=\"#1、transform\" class=\"headerlink\" title=\"1、transform\"></a>1、transform</h2><p>transform 是c3中的变换属性，通过这个属性，我们可以对一个元素进行平移，旋转，放大缩小等操作。</p>\n<p>取值:</p>\n<ul>\n<li>变换函数 translate(), rotate(), scale(), skew(), matrix()…</li>\n<li>none</li>\n</ul>\n<h2 id=\"2、translate-x轴上平移的距离-y轴上平移的距离\"><a href=\"#2、translate-x轴上平移的距离-y轴上平移的距离\" class=\"headerlink\" title=\"2、translate(x轴上平移的距离, y轴上平移的距离)\"></a>2、translate(x轴上平移的距离, y轴上平移的距离)</h2><p>平移函数，用来定义元素从一个位置平移到另一个位置。针对不同的方向还衍生出来了其他一系列的平移函数，比如translateX(), translateY(), translateZ(),还有针对3d空间衍生出来的translate3d()</p>\n<h2 id=\"3、rotate-x轴上旋转的角度-y轴上旋转的角度\"><a href=\"#3、rotate-x轴上旋转的角度-y轴上旋转的角度\" class=\"headerlink\" title=\"3、rotate(x轴上旋转的角度, y轴上旋转的角度)\"></a>3、rotate(x轴上旋转的角度, y轴上旋转的角度)</h2><p>旋转函数，用来定义元素旋转变换。和translate函数类似，也针对不同方向不同维度衍生出一系列函数，比如rotateX(),rotateY(),rotateZ(),rotate3d()</p>\n<h1 id=\"二、perspective-和-transform-style\"><a href=\"#二、perspective-和-transform-style\" class=\"headerlink\" title=\"二、perspective 和 transform-style\"></a>二、perspective 和 transform-style</h1><p>实现一个长方体，无非是对元素的旋转平移，但实际上除了掌握旋转平移，还需要了解另外两个很重要的属性，即perspective和transform-style</p>\n<h2 id=\"1、perspective\"><a href=\"#1、perspective\" class=\"headerlink\" title=\"1、perspective\"></a>1、perspective</h2><p>用来定义观察者与被观察的物体的距离（即观察者到z轴的距离）。就像在现实世界里，离物体越远，看到的物体越小，离物体越近看到的物体越大。</p>\n<h2 id=\"2、transform-style\"><a href=\"#2、transform-style\" class=\"headerlink\" title=\"2、transform-style\"></a>2、transform-style</h2><p>transform-style 用来定义变换的形式，是3d变换还是2d变换</p>\n<p>取值：</p>\n<ul>\n<li>flat 默认值，2d变换</li>\n<li>preserve-3d 3d变换</li>\n</ul>\n<h1 id=\"三、尝试实现正四菱柱\"><a href=\"#三、尝试实现正四菱柱\" class=\"headerlink\" title=\"三、尝试实现正四菱柱\"></a>三、尝试实现正四菱柱</h1><p>具备上述的知识点，就来尝试下如何实现四菱柱。先来分析下，四菱柱除去上下底面，还有四个面，我们可以将四个面堆叠在一起，这样可以统一一个变换中心，然后针对每一个面做旋转平移处理。</p>\n<h2 id=\"1、准备基础素材：\"><a href=\"#1、准备基础素材：\" class=\"headerlink\" title=\"1、准备基础素材：\"></a>1、准备基础素材：</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">html:</span><br><span class=\"line\">    &lt;div class=&quot;wrap&quot;&gt;</span><br><span class=\"line\">        &lt;div class=&quot;box&quot;&gt;</span><br><span class=\"line\">            &lt;div class=&quot;front&quot;&gt;1&lt;/div&gt;</span><br><span class=\"line\">            &lt;div class=&quot;right&quot;&gt;2&lt;/div&gt;</span><br><span class=\"line\">            &lt;div class=&quot;back&quot;&gt;3&lt;/div&gt;</span><br><span class=\"line\">            &lt;div class=&quot;left&quot;&gt;4&lt;/div&gt;</span><br><span class=\"line\">        &lt;/div&gt;</span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">css:</span><br><span class=\"line\">    body &#123;</span><br><span class=\"line\">        background: #ccc;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    .wrap &#123;</span><br><span class=\"line\">        perspective: 400px;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    .box &#123;</span><br><span class=\"line\">        width: 200px;</span><br><span class=\"line\">        height: 300px;</span><br><span class=\"line\">        margin: 200px auto;</span><br><span class=\"line\">        position: relative;</span><br><span class=\"line\">        transform-style: preserve-3d;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    .box div &#123;</span><br><span class=\"line\">        width: 100px;</span><br><span class=\"line\">        height: 150px;</span><br><span class=\"line\">        position: absolute;</span><br><span class=\"line\">        top: 50px;</span><br><span class=\"line\">        left: 50px;</span><br><span class=\"line\">        opacity: .8;</span><br><span class=\"line\">        color: #fff;</span><br><span class=\"line\">        transform-origin: center center;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    .front &#123;</span><br><span class=\"line\">        background: red;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    .right &#123;</span><br><span class=\"line\">        background: green;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    .back &#123;</span><br><span class=\"line\">        background: purple;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    .left &#123;</span><br><span class=\"line\">        background: orange;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<p>得到如下效果：<br><img src=\"/images/css-prism/1.jpg\" alt></p>\n<h2 id=\"2、尝试变换\"><a href=\"#2、尝试变换\" class=\"headerlink\" title=\"2、尝试变换\"></a>2、尝试变换</h2><p>准备好素材，就要开始变换四菱柱的每个面了，通过平行变化，正四菱柱的正面其实直接进行平移就ok了，左侧面需要先旋转一个角度，然后再做平移，嗯。。。旋转，应该关于谁旋转呀，不用想，就知道是关于Y轴旋转，旋转多少度呢？当然是旋转90度，只有旋转90度才能与正面垂直呀,然后再向右(x轴)平移1/2元素的宽度？来试下？</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">html:</span><br><span class=\"line\">    &lt;div class=&quot;wrap&quot;&gt;</span><br><span class=\"line\">        &lt;div class=&quot;box&quot;&gt;</span><br><span class=\"line\">            &lt;div class=&quot;front&quot;&gt;1&lt;/div&gt;</span><br><span class=\"line\">            &lt;div class=&quot;right&quot;&gt;2&lt;/div&gt;</span><br><span class=\"line\">            &lt;div class=&quot;back&quot;&gt;3&lt;/div&gt;</span><br><span class=\"line\">            &lt;div class=&quot;left&quot;&gt;4&lt;/div&gt;</span><br><span class=\"line\">        &lt;/div&gt;</span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">css:</span><br><span class=\"line\">    body &#123;</span><br><span class=\"line\">        background: #ccc;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    .wrap &#123;</span><br><span class=\"line\">        perspective: 400px;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    .box &#123;</span><br><span class=\"line\">        width: 200px;</span><br><span class=\"line\">        height: 300px;</span><br><span class=\"line\">        margin: 200px auto;</span><br><span class=\"line\">        position: relative;</span><br><span class=\"line\">        transform-style: preserve-3d;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    .box div &#123;</span><br><span class=\"line\">        width: 100px;</span><br><span class=\"line\">        height: 150px;</span><br><span class=\"line\">        position: absolute;</span><br><span class=\"line\">        top: 50px;</span><br><span class=\"line\">        left: 50px;</span><br><span class=\"line\">        opacity: .8;</span><br><span class=\"line\">        color: #fff;</span><br><span class=\"line\">        transform-origin: center center;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    .front &#123;</span><br><span class=\"line\">        background: red;</span><br><span class=\"line\">        transform: translateZ(50px);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    .right &#123;</span><br><span class=\"line\">        background: green;</span><br><span class=\"line\">        transform: rotateY(90deg) translateX(50px)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    .back &#123;</span><br><span class=\"line\">        background: purple;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    .left &#123;</span><br><span class=\"line\">        background: orange;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<p>得到如下效果：<br><img src=\"/images/css-prism/2.jpg\" alt><br>咦？为啥只看到了正面这一个面有变化，右侧也做了设置的呀，为啥看不出变化？不知道是否有宝宝也和我一样，把坐标轴想当然的以为是静止不变的，就像数学里面那样坐标轴是固定的，所有的面共用一个坐标轴。<br><img src=\"/images/css-prism/3.jpg\" style=\"width: 40%; height: auto; display: block; margin:0 auto;\"></p>\n<p>实际上在web中，每个面都有独立的坐标轴，当面发生旋转的时候，坐标轴也会跟着旋转，所以在上述例子中我们把右侧的面旋转了90度之后，右侧面的坐标轴也跟着旋转了90度，以为右侧面的x轴还是向右，实际上旋转之后x轴已经变成向后了，而z轴向右（z轴始终垂直元素所在的平面），所以我们想要得到期待的效果，是需要translateZ(50px),而不是translateX(50px)。</p>\n<p>另外可能还有个关于旋转的角度的点有些不好理解，日常生活中，我们常常顺时针旋转的度数为正，逆时针旋转的度数为负，而在web中，我们遵守左手法则，左手的大拇指指向坐标轴的方向，四指所指的方向就是正方向，所以此处按常规思维以为右侧面是应该沿y轴旋转（逆时针旋转90deg）的，实际上根据左手法则，y轴的逆时针方向才是正方向，所以此处是rotateY(90deg), 而不是rotateY(-90deg)。</p>\n<h2 id=\"3、正确变换\"><a href=\"#3、正确变换\" class=\"headerlink\" title=\"3、正确变换\"></a>3、正确变换</h2><p>了解了上述的知识点之后，正四菱柱就变的易如反掌了，那就把剩余的代码补上呗。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">html:</span><br><span class=\"line\">    &lt;div class=&quot;wrap&quot;&gt;</span><br><span class=\"line\">        &lt;div class=&quot;box&quot;&gt;</span><br><span class=\"line\">            &lt;div class=&quot;front&quot;&gt;1&lt;/div&gt;</span><br><span class=\"line\">            &lt;div class=&quot;right&quot;&gt;2&lt;/div&gt;</span><br><span class=\"line\">            &lt;div class=&quot;back&quot;&gt;3&lt;/div&gt;</span><br><span class=\"line\">            &lt;div class=&quot;left&quot;&gt;4&lt;/div&gt;</span><br><span class=\"line\">        &lt;/div&gt;</span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">css:</span><br><span class=\"line\">    body &#123;</span><br><span class=\"line\">        background: #ccc;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    .wrap &#123;</span><br><span class=\"line\">        perspective: 400px;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    .box &#123;</span><br><span class=\"line\">        width: 200px;</span><br><span class=\"line\">        height: 300px;</span><br><span class=\"line\">        margin: 200px auto;</span><br><span class=\"line\">        position: relative;</span><br><span class=\"line\">        transform-style: preserve-3d;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    .box div &#123;</span><br><span class=\"line\">        width: 100px;</span><br><span class=\"line\">        height: 150px;</span><br><span class=\"line\">        position: absolute;</span><br><span class=\"line\">        top: 50px;</span><br><span class=\"line\">        left: 50px;</span><br><span class=\"line\">        opacity: .8;</span><br><span class=\"line\">        color: #fff;</span><br><span class=\"line\">        transform-origin: center center;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    .front &#123;</span><br><span class=\"line\">        background: red;</span><br><span class=\"line\">        transform: translateZ(50px);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    .right &#123;</span><br><span class=\"line\">        background: green;</span><br><span class=\"line\">        transform: rotateY(90deg) translateZ(50px)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">   .back &#123;</span><br><span class=\"line\">        background: purple;</span><br><span class=\"line\">        transform: rotateY(180deg) translateZ(50px)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    .left &#123;</span><br><span class=\"line\">        background: orange;</span><br><span class=\"line\">        transform: rotateY(270deg) translateZ(50px)</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/images/css-prism/4.jpg\" alt><br>当然也可以添加点旋转动效呀，直接上<a href=\"https://codepen.io/rxfxiaoxiao/full/bXYBjb\" target=\"_blank\" rel=\"noopener\">codepen</a>呀~</p>\n<h1 id=\"四、了解正菱柱的特点\"><a href=\"#四、了解正菱柱的特点\" class=\"headerlink\" title=\"四、了解正菱柱的特点\"></a>四、了解正菱柱的特点</h1><h2 id=\"概念：\"><a href=\"#概念：\" class=\"headerlink\" title=\"概念：\"></a>概念：</h2><p>底面是正多边形的直棱柱叫做正棱柱。正棱柱是侧棱都垂直于底面，且底面是正多边形的棱柱</p>\n<h2 id=\"了解正多边形的特点：\"><a href=\"#了解正多边形的特点：\" class=\"headerlink\" title=\"了解正多边形的特点：\"></a>了解正多边形的特点：</h2><p>1、直接引用张大神博客上的图片<br><img src=\"/images/css-prism/5.jpg\" alt></p>\n<p>2、看到这张图片是否瞬间觉得豁然开朗，有了它再加上上面的前面的知识点，我们可以创造正n菱柱，来，说干就干，为加深印象，徒手就从四菱柱写到了正7菱柱（写了个彩虹色嘛，七色斑斓），一起看看：</p>\n<ul>\n<li><p>五菱柱：<br>直接上<a href=\"https://codepen.io/rxfxiaoxiao/full/EqbNpw\" target=\"_blank\" rel=\"noopener\">codepen</a>呀~</p>\n</li>\n<li><p>六菱柱：<br>直接上<a href=\"https://codepen.io/rxfxiaoxiao/full/bXYBjb\" target=\"_blank\" rel=\"noopener\">codepen</a>呀~</p>\n</li>\n<li><p>七菱柱<br>直接上<a href=\"https://codepen.io/rxfxiaoxiao/pen/bXYBxG\" target=\"_blank\" rel=\"noopener\">codepen</a>呀~</p>\n</li>\n</ul>\n<h2 id=\"用js简单封装一个生成正n菱柱的插件\"><a href=\"#用js简单封装一个生成正n菱柱的插件\" class=\"headerlink\" title=\"用js简单封装一个生成正n菱柱的插件\"></a>用js简单封装一个生成正n菱柱的插件</h2><p>感觉每次手动去写去计算还是不够爽，所以就动手自己封装一个可以生成正n菱柱的插件</p>\n<p>直接上<a href=\"https://codepen.io/rxfxiaoxiao/full/xvYzBg\" target=\"_blank\" rel=\"noopener\">codepen</a>呀~</p>\n<p>其实也没有什么特别的说，主要还是加深理解。</p>\n","categories":["css"],"tags":["3d变换, css菱柱"]},{"title":"css渐变实现多彩背景","url":"http://yoursite.com/2019/07/18/css-gradient/","content":"<p>博客又落下几篇了，感觉就算是周更也有点困难啊，特别像我这种没有什么语言功底的人来说，写一篇博客真的要元气大伤，其实主要的难点还是在于不想把博客写成工具那样，希望能够融入一点自己的思想，要么是理解，要么是应用。最近总觉得自己基础不好，闲下来的时候翻翻基础书，从css，js开始，最近在学习大漠老师写的《图解css3》，有些知识点感觉很熟悉的，但是呢，自己应用起来感觉好像理解的又不是很到位，就比如像渐变这种属性，以前学的时候大概就只是看到一些比较表层的东西，自己写些花里胡哨的粗浅的东西，也不觉得这个东西有什么作用，后面这次学习的时候看到书中有提到《css揭秘》作者Lea Verou 用这个属性实现很多很惊艳的图案背景，瞬间惊呆了，所以任何一个小知识点都不容小觑，小知识成就大世界。今天写这篇博客，主要还是加深自己的理解，以免时间久了就忘了。</p>\n<h1 id=\"回顾一下知识点\"><a href=\"#回顾一下知识点\" class=\"headerlink\" title=\"回顾一下知识点\"></a>回顾一下知识点</h1><h2 id=\"线性渐变linear-gradient\"><a href=\"#线性渐变linear-gradient\" class=\"headerlink\" title=\"线性渐变linear-gradient()\"></a>线性渐变linear-gradient()</h2><h3 id=\"理解\"><a href=\"#理解\" class=\"headerlink\" title=\"理解\"></a>理解</h3><p>用来创建一种或者多种颜色渐变的图片，渐变关系呈线性变化</p>\n<h3 id=\"语法规则\"><a href=\"#语法规则\" class=\"headerlink\" title=\"语法规则\"></a>语法规则</h3><p>1、linear-gradient(方位参数, 颜色1 颜色1所占的百分比|具体长度[可选], 颜色2 颜色2所占的百分比|具体长度[可选], … , 颜色N 颜色N所占的百分比|具体长度[可选])</p>\n<ul>\n<li>方位参数取值<ul>\n<li>to top</li>\n<li>to bottom</li>\n<li>to left</li>\n<li>to right</li>\n<li>to top right</li>\n<li>to top left</li>\n<li>to bottom right</li>\n<li>to bottom left</li>\n</ul>\n</li>\n<li>取具体的角度值，比如: 45deg, 135deg,-45deg</li>\n<li>颜色取值：<ul>\n<li>颜色名字 red|pink|…</li>\n<li>#333, ..,#ccc…</li>\n<li>rgba(0,0,0,.3)</li>\n</ul>\n</li>\n</ul>\n<p>2、最关键要理解渐变线，直接引用mdn的图<br><img src=\"/images/css-gradient/1.jpg\" alt><br>渐变线由包含渐变图形的容器<code>中心点</code>和<code>一个角度</code>来定义的。</p>\n<h2 id=\"径向渐变radial-gradient\"><a href=\"#径向渐变radial-gradient\" class=\"headerlink\" title=\"径向渐变radial-gradient()\"></a>径向渐变radial-gradient()</h2><h3 id=\"理解-1\"><a href=\"#理解-1\" class=\"headerlink\" title=\"理解\"></a>理解</h3><p>用来创建由渐变中心（原点）向四周展开成圆形或者椭圆形的颜色渐变</p>\n<h3 id=\"语法规则-1\"><a href=\"#语法规则-1\" class=\"headerlink\" title=\"语法规则\"></a>语法规则</h3><p>1、radial-gradient(shape size at position, color1 百分比,….,colorN 百分比);</p>\n<ul>\n<li><p>shape 形状,可选参数</p>\n<ul>\n<li>ellipse 椭圆</li>\n<li>circle 圆形</li>\n</ul>\n</li>\n<li><p>size 半径</p>\n<ul>\n<li>如果形状为椭圆，则分别取长轴半径和短轴半径，即两个值x,y</li>\n<li>如果形状为圆形，则取圆形半径， 即一个取值x</li>\n</ul>\n</li>\n<li><p>position 圆心点的坐标</p>\n<ul>\n<li>可以是方位名词, 比如 top left</li>\n<li>也可以是具体的计量长度 比如：100px 100px</li>\n</ul>\n</li>\n</ul>\n<p>2、这里引入mdn上的图片，加深对渐变过程的理解<br><img src=\"/images/css-gradient/2.jpg\" alt></p>\n<h2 id=\"尝试做一些好看的纹理背景\"><a href=\"#尝试做一些好看的纹理背景\" class=\"headerlink\" title=\"尝试做一些好看的纹理背景\"></a>尝试做一些好看的纹理背景</h2><p>学完基础的语法，大伙是否和我一样，脑海中并没有什么特别的想法？这些属性能干什么？能做什么？就像博客开头说的那样，如果我没有看到Lea Verou的作品，那我现在依然只是重温一遍语法，实现的依然是粗浅的练手demo，但是因为看过她的作品，所以我也尝试着去写一些东西，有时候觉得css真的就像是障眼法，永远都不要用传统的视角去实现某个特效，好啦，来欣赏我写的背景吧。</p>\n<h3 id=\"斜纹\"><a href=\"#斜纹\" class=\"headerlink\" title=\"斜纹\"></a>斜纹</h3><ul>\n<li><p>效果图如下：<br><img src=\"/images/css-gradient/3.jpg\" alt></p>\n</li>\n<li><p>关键代码如下<br><a href=\"https://codepen.io/rxfxiaoxiao/full/wVWZzq\" target=\"_blank\" rel=\"noopener\">直接上codepen啊<del>~</del></a></p>\n</li>\n</ul>\n<h3 id=\"斜切三角形\"><a href=\"#斜切三角形\" class=\"headerlink\" title=\"斜切三角形\"></a>斜切三角形</h3><ul>\n<li><p>效果图如下：<br><img src=\"/images/css-gradient/4.jpg\" alt></p>\n</li>\n<li><p>关键代码如下<br><a href=\"https://codepen.io/rxfxiaoxiao/full/zgBXdV\" target=\"_blank\" rel=\"noopener\">直接上codepen啊<del>~</del></a></p>\n</li>\n</ul>\n<h3 id=\"蓝天白云\"><a href=\"#蓝天白云\" class=\"headerlink\" title=\"蓝天白云\"></a>蓝天白云</h3><ul>\n<li><p>效果图如下：<br><img src=\"/images/css-gradient/5.jpg\" alt></p>\n</li>\n<li><p>关键代码如下<br><a href=\"https://codepen.io/rxfxiaoxiao/full/GVqLym\" target=\"_blank\" rel=\"noopener\">直接上codepen啊<del>~</del></a></p>\n</li>\n</ul>\n<h3 id=\"小心心\"><a href=\"#小心心\" class=\"headerlink\" title=\"小心心\"></a>小心心</h3><ul>\n<li><p>效果图如下：<br><img src=\"/images/css-gradient/6.jpg\" alt></p>\n</li>\n<li><p>关键代码如下<br><a href=\"https://codepen.io/rxfxiaoxiao/full/EqyJQY\" target=\"_blank\" rel=\"noopener\">直接上codepen啊<del>~</del></a></p>\n</li>\n</ul>\n<h3 id=\"粉色小碎花\"><a href=\"#粉色小碎花\" class=\"headerlink\" title=\"粉色小碎花\"></a>粉色小碎花</h3><ul>\n<li><p>效果图如下：<br><img src=\"/images/css-gradient/7.jpg\" alt></p>\n</li>\n<li><p>关键代码如下<br><a href=\"https://codepen.io/rxfxiaoxiao/full/MNeRQL\" target=\"_blank\" rel=\"noopener\">直接上codepen啊<del>~</del></a></p>\n</li>\n</ul>\n<h3 id=\"橙子\"><a href=\"#橙子\" class=\"headerlink\" title=\"橙子\"></a>橙子</h3><ul>\n<li><p>效果图如下：<br><img src=\"/images/css-gradient/8.jpg\" alt></p>\n</li>\n<li><p>关键代码如下<br><a href=\"https://codepen.io/rxfxiaoxiao/full/JgKVvd\" target=\"_blank\" rel=\"noopener\">直接上codepen啊<del>~</del></a></p>\n</li>\n</ul>\n<h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><p>看到这些效果，是不是发现渐变属性也能创造一些意想不到的惊喜的？不过惊喜归惊喜，看代码也知道效果虽然好看，但是代码冗长啊，所以在实际开发中可能会使用其他的高效一点的方式。好啦，就先总结到这里啦，后面有补充的再补充去啦</p>\n","categories":["css"],"tags":["css渐变"]},{"title":"white-space,word-wrap,word-break三者的区别","url":"http://yoursite.com/2019/07/02/txt-wrap/","content":"<p>虽然工作也有几年了，但是每次用到white-space,word-wrap,word-break这几个属性的时候总觉得有些懵圈，傻傻分不清楚。最近有时间又重新来翻翻基础知识，想好好消化一下。</p>\n<h2 id=\"1-0-0-white-space\"><a href=\"#1-0-0-white-space\" class=\"headerlink\" title=\"1.0.0 white-space\"></a>1.0.0 white-space</h2><h3 id=\"1-1-0-介绍\"><a href=\"#1-1-0-介绍\" class=\"headerlink\" title=\"1.1.0 介绍\"></a>1.1.0 介绍</h3><p>作用： 设置如何处理元素中的空白</p>\n<h3 id=\"1-2-0-取值\"><a href=\"#1-2-0-取值\" class=\"headerlink\" title=\"1.2.0 取值\"></a>1.2.0 取值</h3><h4 id=\"1-2-1-空白符的理解及浏览器的处理规则\"><a href=\"#1-2-1-空白符的理解及浏览器的处理规则\" class=\"headerlink\" title=\"1.2.1 空白符的理解及浏览器的处理规则\"></a>1.2.1 空白符的理解及浏览器的处理规则</h4><p>看官方文档，老是会出现空白符，换行符，然后总是会想当然的以为是<code>&amp;nbsp;&lt;br&gt;这类的</code>，实际上并不是，而是指代码中文本的<code>原始格式</code>中的<code>空格</code>和<code>换行</code>。<code>&amp;nbsp; &lt;br&gt;</code>的作用效果不会受到white-space取值的影响。具体看下方示意图:<br><img src=\"/images/txt-wrap/1.jpg\" alt><br><code>浏览器对于空格的处理规则是文字的前部和后部的空格都会忽略，内部的连续空格只会算作一个</code></p>\n<h4 id=\"1-2-2-具体取值：\"><a href=\"#1-2-2-具体取值：\" class=\"headerlink\" title=\"1.2.2 具体取值：\"></a>1.2.2 具体取值：</h4><p>针对这个属性的示例，除了white-space取值不同以外，其他代码公共部分如下所示：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">html:</span><br><span class=\"line\">&lt;div class=&quot;box&quot;&gt;</span><br><span class=\"line\">    死去元知万事空，&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;但悲不见九州同。</span><br><span class=\"line\">    王师北定中原日，    家祭无忘告乃翁。&lt;br&gt; </span><br><span class=\"line\">    In the end, it’s not&amp;nbsp;&amp;nbsp;the years in your life that count. It’s the life in your years.ohhhhhhhhhhhhhhhhhhhhhh~</span><br><span class=\"line\">&lt;/div&gt; </span><br><span class=\"line\"></span><br><span class=\"line\">css:</span><br><span class=\"line\">div &#123;</span><br><span class=\"line\">    width: 200px;</span><br><span class=\"line\">    border: 1px solid red;</span><br><span class=\"line\">    margin: 20px;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><p><code>normal</code> 默认值；连续<code>空白符会被合并</code>（同浏览器处理空白规则），<code>换行符会被当做空白符</code>来处理<br><img src=\"/images/txt-wrap/2.jpg\" alt></p>\n</li>\n<li><p><code>nowrap</code> 连续<code>空白符会被合并</code>（同浏览器处理空白规则），<code>文本内的换行无效</code><br><img src=\"/images/txt-wrap/3.jpg\" alt></p>\n</li>\n<li><p><code>pre</code> 连续<code>空白符会被保留</code>，遇到<code>换行符或者&lt;br&gt;元素才会换行</code>（本质就是保留代码中文本的原始格式）<br><img src=\"/images/txt-wrap/4.jpg\" alt></p>\n</li>\n<li><p><code>pre-wrap</code> 同pre,但是它会在<code>填充line盒子时换行</code>（本质就是保留代码中文本的原始格式，但是如果文本超出容器也会自动换行）<br><img src=\"/images/txt-wrap/5.jpg\" alt></p>\n</li>\n<li><p><code>pre-line</code> 连续空白符会被合并（同浏览器处理空白规则），遇到换行符或者<br>元素或者为了填充line盒子(触碰到容器边缘)时会换行<br><img src=\"/images/txt-wrap/6.jpg\" alt></p>\n</li>\n</ul>\n<h2 id=\"2-0-0-word-wrap-overflow-wrap\"><a href=\"#2-0-0-word-wrap-overflow-wrap\" class=\"headerlink\" title=\"2.0.0 word-wrap | overflow-wrap\"></a>2.0.0 word-wrap | overflow-wrap</h2><h3 id=\"2-1-0介绍\"><a href=\"#2-1-0介绍\" class=\"headerlink\" title=\"2.1.0介绍\"></a>2.1.0介绍</h3><p>word-wrap起初是属于微软的一个私有属性，现在被重命名为<code>overflow-wrap</code></p>\n<h3 id=\"2-2-0-属性值\"><a href=\"#2-2-0-属性值\" class=\"headerlink\" title=\"2.2.0 属性值\"></a>2.2.0 属性值</h3><ul>\n<li><code>normal</code> 在正常的单词结束处换行。</li>\n<li><code>break-word</code> 如果行内<code>没有足够的空间容纳</code>某个单词，那么该单词可能会被<code>强制截断换行</code>(如果是短单词，直接换行显示完全，如果是长单词，换行依然不能显示完全，则截断换行显示)</li>\n</ul>\n<h3 id=\"2-3-0-示例\"><a href=\"#2-3-0-示例\" class=\"headerlink\" title=\"2.3.0 示例\"></a>2.3.0 示例</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">html:</span><br><span class=\"line\">&lt;div class=&quot;box1&quot;&gt;不积跬步无以至千里，不积小流无以成江海 abcdefghijklmnopqrstuvwxyz&lt;/div&gt;</span><br><span class=\"line\">&lt;div class=&quot;box2&quot;&gt;不积跬步无以至千里，不积小流无以成江海 abcdefghijklmnopqrstuvwxyz&lt;/div&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">css:</span><br><span class=\"line\">&lt;style&gt;</span><br><span class=\"line\">    div &#123;</span><br><span class=\"line\">        width: 150px;</span><br><span class=\"line\">        height: 200px;</span><br><span class=\"line\">        word-wrap: break-word;</span><br><span class=\"line\">        border:1px solid #ccc;</span><br><span class=\"line\">        margin: 50px auto;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    .box1 &#123;</span><br><span class=\"line\">        overflow-wrap: normal;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    .box2 &#123;</span><br><span class=\"line\">        overflow: break-word;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&lt;/style&gt;</span><br></pre></td></tr></table></figure>\n\n<p>运行结果如下：<br><img src=\"/images/txt-wrap/7.jpg\" alt></p>\n<h2 id=\"3-0-0-word-break\"><a href=\"#3-0-0-word-break\" class=\"headerlink\" title=\"3.0.0 word-break\"></a>3.0.0 word-break</h2><h3 id=\"3-1-0-介绍\"><a href=\"#3-1-0-介绍\" class=\"headerlink\" title=\"3.1.0 介绍\"></a>3.1.0 介绍</h3><p>作用： 指定了怎样在单词内断行</p>\n<h3 id=\"3-2-0-属性值\"><a href=\"#3-2-0-属性值\" class=\"headerlink\" title=\"3.2.0 属性值\"></a>3.2.0 属性值</h3><ul>\n<li><code>normal</code> 默认断行规则</li>\n<li><code>break-all</code> 只要触碰到容器边缘就强制换行，不管是长单词还是短单词，（中/日/韩 文本除外）</li>\n<li><code>keep-all</code> 中/日/韩 在不同的浏览器中表现不一样，其他语言的文本在不同浏览器中表现一致且表现和normal一样。(目前测试在chrome浏览器中表现为接近容器边缘的地方如果有 标点|半角空格 会换行，火狐浏览器中只有 半角空格 处换行, 中日韩文字之间不能被强制拆分换行)</li>\n</ul>\n<h3 id=\"3-3-0-示例\"><a href=\"#3-3-0-示例\" class=\"headerlink\" title=\"3.3.0 示例\"></a>3.3.0 示例</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">html:</span><br><span class=\"line\">   &lt;div class=&quot;break-all&quot;&gt;昆山玉碎凤凰叫，芙蓉泣露香兰笑。拼音是:kun shan yu sui feng huang jiao, fu rong qi lu xiang lan xiao. 去掉标点及空格之后是：kunshanyusuifenghuangjiao, furongqiluxianglanxiao&lt;/div&gt;</span><br><span class=\"line\">    &lt;div class=&quot;keep-all&quot;&gt;昆山玉碎凤凰叫，芙蓉泣露香兰笑。拼音是:kun shan yu sui feng huang jiao, fu rong qi lu xiang lan xiao. 去掉标点及空格之后是：kunshanyusuifenghuangjiao, furongqiluxianglanxiao&lt;/div&gt;</span><br><span class=\"line\">css:</span><br><span class=\"line\">    &lt;style&gt;</span><br><span class=\"line\">         div &#123;</span><br><span class=\"line\">            width: 150px;</span><br><span class=\"line\">            height: auto;</span><br><span class=\"line\">            border: 1px solid #333;</span><br><span class=\"line\">            margin: 30px auto;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        .break-all &#123;</span><br><span class=\"line\">            word-break: break-all;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        .keep-all &#123;</span><br><span class=\"line\">            word-break: keep-all;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &lt;/style&gt;</span><br></pre></td></tr></table></figure>\n<p>运行结果如下：<br><img src=\"/images/txt-wrap/8.jpg\" alt></p>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><ul>\n<li><p>white-space 主要是控制空白字符的显示，同时也能控制是否换行。取值有 normal|nowrap|pre|pre-wrap|pre-line,最常见的应用场景就是和text-overflow配合控制超出行省略号表示</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.overflow-ellipsis &#123;</span><br><span class=\"line\">    text-overflow: ellipsis;</span><br><span class=\"line\">    overflow: hidden;</span><br><span class=\"line\">    white-space: nowrap;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>word-break不同的取值在不同浏览器下面略有差异，使用break-all时不管单词长短，一旦触碰到边界就直接强制截断，可能这些并不是我们期望的结果。这时候我们就可能使用word-wrap:break-word 这个属性会更加合适一些。</p>\n</li>\n<li><p>更多的想到再补充吧~ </p>\n</li>\n</ul>\n","categories":["css"],"tags":["white-space, word-wrap, word-break"]},{"title":"css原生变量","url":"http://yoursite.com/2019/06/28/css-variables/","content":"<h2 id=\"1-0-0-简介\"><a href=\"#1-0-0-简介\" class=\"headerlink\" title=\"1.0.0 简介\"></a>1.0.0 简介</h2><p>用过sass/less这类预编译工具的同学都很少再想写css，为啥？因为预编译工具带来的便利哪里只是一点点，我们可以自定义变量，函数，宏，这样灵活度很高，开发起来节省时间，大大提高开发效率。既然这么方便，为啥原生css不自己支持变量定义呢？虽然不知道以后发展会怎样，但是现在CSS工作组确实已经支持了CSS变量规范的制定。并且到现在为止已经有大部分浏览器支持了哦。</p>\n<h3 id=\"1-1-0-浏览器支持程度\"><a href=\"#1-1-0-浏览器支持程度\" class=\"headerlink\" title=\"1.1.0 浏览器支持程度\"></a>1.1.0 浏览器支持程度</h3><p>我们先来看看浏览器支持情况:<br><img src=\"/images/css-variables/1.jpg\" alt><br>目前已有91.11%支持，相信未来应用会越来越广。</p>\n<h2 id=\"2-0-0-定义与使用\"><a href=\"#2-0-0-定义与使用\" class=\"headerlink\" title=\"2.0.0 定义与使用\"></a>2.0.0 定义与使用</h2><h3 id=\"2-1-0-定义：\"><a href=\"#2-1-0-定义：\" class=\"headerlink\" title=\"2.1.0 定义：\"></a>2.1.0 定义：</h3><p>css自定义变量就比较有意思了，以两根连词线(–)开头，然后加上变量名,即<code>--变量名</code>, 比如：<code>--margvl</code>;</p>\n<h3 id=\"2-1-1-全局与局部定义\"><a href=\"#2-1-1-全局与局部定义\" class=\"headerlink\" title=\"2.1.1 全局与局部定义\"></a>2.1.1 全局与局部定义</h3><p>css自定义变量同样也有全局和局部之分。</p>\n<p>1、通常全局变量会放定义在结构伪类选择器:root{}里，如：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.root &#123;</span><br><span class=\"line\">    --txtcolor: red;</span><br><span class=\"line\">    --subtxtcolor: green;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>2、定义在非根节点中的变量，是局部变量，一般只有其子类才能使用这个变量。如：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.box &#123;</span><br><span class=\"line\">    --boxcolor: blue;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-2-0-使用\"><a href=\"#2-2-0-使用\" class=\"headerlink\" title=\"2.2.0 使用\"></a>2.2.0 使用</h3><p>css自定义变量后，如何在需要的地方使用它呢？我们可以使用var()函数</p>\n<h4 id=\"2-2-1-var-函数的理解\"><a href=\"#2-2-1-var-函数的理解\" class=\"headerlink\" title=\"2.2.1 var()函数的理解\"></a>2.2.1 var()函数的理解</h4><p>形式: var(–变量名，默认值); 接受两个参数，第一个参数是传入的自定义变量的值，如果第一个参数未被定义，则默认取第二个值。具体看实例：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">html: </span><br><span class=\"line\">&lt;div&gt;233&lt;/div&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">css: </span><br><span class=\"line\">:root &#123;</span><br><span class=\"line\">    --boxcolor: red;</span><br><span class=\"line\">    --boxbg: #eee;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">div &#123;</span><br><span class=\"line\">    width: 200px;</span><br><span class=\"line\">    height: 200px;</span><br><span class=\"line\">    text-align:center;</span><br><span class=\"line\">    line-height: 200px;</span><br><span class=\"line\">    color: var(--boxcolor, green);</span><br><span class=\"line\">    background-color: var(--boxbg);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>运行结果如图所示，如果把 ”–boxcolor: red;“ 注释掉，则文字颜色为绿色。<br><img src=\"/images/css-variables/2.jpg\" alt></p>\n<h4 id=\"2-2-2-变量值不符合逻辑时的处理\"><a href=\"#2-2-2-变量值不符合逻辑时的处理\" class=\"headerlink\" title=\"2.2.2 变量值不符合逻辑时的处理\"></a>2.2.2 变量值不符合逻辑时的处理</h4><p>自定义设定的值如果不符合逻辑时，则会被抛弃，而取用系统默认值（不是var的第二个参数），例如：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">html: </span><br><span class=\"line\">&lt;div&gt;木已成舟&lt;/div&gt; &lt;!--黑色--&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">css: </span><br><span class=\"line\">:root &#123;</span><br><span class=\"line\">    --colr: 20px;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">div &#123; </span><br><span class=\"line\">    color: var(--colr, blue);   </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"2-2-3-calc-在css变量中的应用\"><a href=\"#2-2-3-calc-在css变量中的应用\" class=\"headerlink\" title=\"2.2.3 calc()在css变量中的应用\"></a>2.2.3 calc()在css变量中的应用</h4><p>自定义变量如果没有没有带单位，使用变量是不能直接拼接，比如： 定义变量 –size: 60; 使用时<code>不能</code>直接用margin-top: var(–size)px,这样浏览器解析出来的会变成<code>20 px</code>，即多了一个空格。我们需要使用<code>calc()</code>进行计算，比如：<code>margin-left: calc(var(--size)*1px)</code></p>\n<h4 id=\"2-2-4-currentColor\"><a href=\"#2-2-4-currentColor\" class=\"headerlink\" title=\"2.2.4 currentColor\"></a>2.2.4 currentColor</h4><p>currentColor 是一个用来表示当前色的变量，跟着文字的颜色走，例如：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">html: </span><br><span class=\"line\">&lt;div&gt;我欲乘风归去，又恐琼楼玉宇&lt;/div&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">css:</span><br><span class=\"line\">div &#123;</span><br><span class=\"line\">    width: 200px;</span><br><span class=\"line\">    height: 200px;</span><br><span class=\"line\">    color: purple;</span><br><span class=\"line\">    border: 1px solid currentColor;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>运行结果如下所示：<br><img src=\"/images/css-variables/3.jpg\" alt></p>\n<h4 id=\"2-2-5-css变量和脚本结合起来\"><a href=\"#2-2-5-css变量和脚本结合起来\" class=\"headerlink\" title=\"2.2.5 css变量和脚本结合起来\"></a>2.2.5 css变量和脚本结合起来</h4><ul>\n<li>获取变量值 xx.style.getPropertyValue(变量名),只有通过xx.style.setProperty(变量名，变量值)设置值之后才能获取到</li>\n<li>设置变量值 xx.style.setProperty(变量名，变量值);</li>\n<li>删除变量 xx.style.removeProperty(变量名);</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">html: </span><br><span class=\"line\">&lt;div class=&quot;box&quot;&gt;问君能有几多愁，恰似一江春水向东流&lt;/div&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">css: </span><br><span class=\"line\">:root &#123;</span><br><span class=\"line\">    --color: pink</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">box &#123;</span><br><span class=\"line\">    color: var(--color);</span><br><span class=\"line\">    border: 1px solid currentColor;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">js:</span><br><span class=\"line\">var rootEl = document.documentElement;</span><br><span class=\"line\">console.info(rootEl.style.getPropertyValue(&apos;--color&apos;).trim()); // 空串</span><br><span class=\"line\">rootEl.style.setProperty(&apos;--color&apos;, &apos;pink&apos;);</span><br><span class=\"line\">console.info(rootEl.style.getPropertyValue(&apos;--color&apos;).trim()); //  pink</span><br><span class=\"line\">rootEl.style.removeProperty(&apos;--color&apos;);</span><br><span class=\"line\">console.info(rootEl.style.getPropertyValue(&apos;--color&apos;).trim());  // 空串</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"css变量能做哪些有趣的事情\"><a href=\"#css变量能做哪些有趣的事情\" class=\"headerlink\" title=\"css变量能做哪些有趣的事情\"></a>css变量能做哪些有趣的事情</h2><p>到这里，我们有些迫不及待的想要把它应用起来了，其实它能做的事情太多了，先看几个小demo</p>\n<h3 id=\"案例1\"><a href=\"#案例1\" class=\"headerlink\" title=\"案例1:\"></a>案例1:</h3><p>直接贴<a href=\"https://codepen.io/rxfxiaoxiao/full/Wqdrqj\" target=\"_blank\" rel=\"noopener\">codepen链接</a></p>\n<p>简单看下界面，如下图所示，一个下拉框，一个盒子，下拉框更新一种颜色，右侧盒子的边框和文字颜色也会跟着变化。</p>\n<p><img src=\"/images/css-variables/4.jpg\" alt></p>\n<p>其实可以去codepen中体验下，看到这个效果是否会联想到换肤功能？代码其实很简单，如下所示：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> html:</span><br><span class=\"line\"> &lt;select name=&quot;selColor&quot; id=&quot;selBox&quot;&gt;</span><br><span class=\"line\">     &lt;option value=&quot;red&quot;&gt;默认&lt;/option&gt;</span><br><span class=\"line\">     &lt;option value=&quot;green&quot;&gt;绿色&lt;/option&gt;</span><br><span class=\"line\">     &lt;option value=&quot;blue&quot;&gt;蓝色&lt;/option&gt;</span><br><span class=\"line\">     &lt;option value=&quot;pink&quot;&gt;粉色&lt;/option&gt;</span><br><span class=\"line\">     &lt;option value=&quot;purple&quot;&gt;紫色&lt;/option&gt;</span><br><span class=\"line\"> &lt;/select&gt;</span><br><span class=\"line\"> &lt;div class=&quot;box&quot;&gt;风萧萧兮易水寒，壮士一去兮不复还&lt;/div&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"> css:</span><br><span class=\"line\">:root &#123;</span><br><span class=\"line\">     --color: red;</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"> div &#123;</span><br><span class=\"line\">     width: 400px;</span><br><span class=\"line\">     height: 100px;</span><br><span class=\"line\">     color: var(--color);</span><br><span class=\"line\">     border: 1px solid currentColor;</span><br><span class=\"line\">     margin:20px auto;</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"> js:</span><br><span class=\"line\"> var rootEl = document.documentElement;</span><br><span class=\"line\"> var selEl = document.getElementById(&apos;selBox&apos;);</span><br><span class=\"line\"> selEl.addEventListener(&apos;change&apos;, function() &#123;</span><br><span class=\"line\">     rootEl.style.setProperty(&apos;--color&apos;, this.value);</span><br><span class=\"line\"> &#125;)</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"案例2\"><a href=\"#案例2\" class=\"headerlink\" title=\"案例2\"></a>案例2</h3><p>定义一个盒子，并且给一个初始的背景色，然后当光标在上方移动的时候不断改变盒子的背景颜色，可以直接进<a href=\"https://codepen.io/rxfxiaoxiao/full/PrENyJ\" target=\"_blank\" rel=\"noopener\">codepen</a>体验效果。</p>\n<p>初始效果如下：<br><img src=\"/images/css-variables/5.jpg\" alt></p>\n<p>直接上代码，简单明了：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">HTML：</span><br><span class=\"line\">&lt;div class=&quot;box&quot; id=&quot;box&quot;&gt;&lt;/div&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">css</span><br><span class=\"line\">:root &#123;</span><br><span class=\"line\">    --x: 0;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">div&#123;</span><br><span class=\"line\">    width: 200px;</span><br><span class=\"line\">    height: 200px;</span><br><span class=\"line\">    background-color: hsl(calc(var(--x)*360), 85%, 50%);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">js:</span><br><span class=\"line\">var rootDom = document.documentElement;</span><br><span class=\"line\">var box = document.getElementById(&apos;box&apos;);</span><br><span class=\"line\"></span><br><span class=\"line\">var box_w = box.clientWidth;</span><br><span class=\"line\">var box_left = box.getBoundingClientRect().left;</span><br><span class=\"line\"></span><br><span class=\"line\">box.addEventListener(&apos;mousemove&apos;, function(evt) &#123;</span><br><span class=\"line\">    var _val = (evt.clientX - box_left)/box_w;</span><br><span class=\"line\">    rootDom.style.setProperty(&apos;--x&apos;, _val);</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n","categories":["css"],"tags":["css原生变量"]},{"title":"css实现毛玻璃的效果","url":"http://yoursite.com/2019/06/13/css-mbl/","content":"<h2 id=\"概述\"><a href=\"#概述\" class=\"headerlink\" title=\"概述\"></a>概述</h2><p>前段时间在开发公司项目时，需要使用到如下图所示特效，我们先来分析一下这张图，背景是一张清晰的图片，然后最左侧就像是盖了一层毛玻璃，透过这块玻璃看背景图片给人呈现出一种隐隐约约模糊的视觉效果。初看这种效果时，我们不能想当然的以为只是在背景上面盖了一块有透明度的白色区块，纯粹的透明度是不会出现这种模糊的效果，那如图效果该如何实现呢？感兴趣的看官请继续往下读。</p>\n<p><img src=\"/images/css-mbl/mbl-1.jpg\" alt></p>\n<h2 id=\"初识Filter（滤镜）属性\"><a href=\"#初识Filter（滤镜）属性\" class=\"headerlink\" title=\"初识Filter（滤镜）属性\"></a>初识Filter（滤镜）属性</h2><p>1、作用： 用于调整图像，背景和边框的渲染</p>\n<p>2、兼容写法：</p>\n<ul>\n<li>filter: xxx;</li>\n<li>-webkit-filter: xxx;</li>\n</ul>\n<p>3、滤镜函数</p>\n<ul>\n<li>url()</li>\n<li>blur() 设置高斯模糊，值越大越模糊</li>\n<li>brightness() 默认是1，调整图片亮度，100%-&gt;0% 值越小越暗,为0%时全黑；100%是临界点，图片不发生变化，超过100%，值越大越亮；</li>\n<li>contrast 调整对比度 默认为1，100%是临界点，图片不发生变化，0%为全黑，超过100%值</li>\n<li>drop-shadow(offset-x[必须], offset-y[必须], blur-radius[可选], color[可选]) 给图像设置一个阴影效果，参数分别为x偏移量，y偏移量，模糊半径，阴影颜色。</li>\n<li>grayscale() 将图片转化为灰度图像</li>\n<li>hue-rotate() 给图像进行色相旋转。0度时图片无变化</li>\n<li>invert() 反转输入图像。默认是0，图片无变化，取值为0-100%，100%为完全反转。</li>\n<li>opacity() 转化图片的透明程度，0% 完全透明，100% 图像无变化。</li>\n<li>saturate() 转化图像饱和度。0% -&gt; 完全不饱和， 100% -&gt; 图像无变化。超过100% -&gt; 更高的饱和度。</li>\n<li>sepia() 将图片转换为褐色。 默认为0，取值为0-100%；为0时图像无变化，为100%时完全是深褐色的。</li>\n</ul>\n<h2 id=\"使用filter-blur-实现毛玻璃特效\"><a href=\"#使用filter-blur-实现毛玻璃特效\" class=\"headerlink\" title=\"使用filter:blur 实现毛玻璃特效\"></a>使用filter:blur 实现毛玻璃特效</h2><h3 id=\"想当然的误入歧途\"><a href=\"#想当然的误入歧途\" class=\"headerlink\" title=\"想当然的误入歧途\"></a>想当然的误入歧途</h3><h4 id=\"错误案例1：\"><a href=\"#错误案例1：\" class=\"headerlink\" title=\"错误案例1：\"></a>错误案例1：</h4><p>首先我们初步分析下结构应该是怎样的？</p>\n<ul>\n<li>一个主容器</li>\n<li>存放图片的容器</li>\n<li>左侧那块模糊遮罩</li>\n</ul>\n<p>嗯，那对应的结构应该就是如下了：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div class=&quot;wrap&quot;&gt;</span><br><span class=\"line\">    &lt;img src=&quot;./images/omni.jpg&quot; alt=&quot;&quot;&gt;</span><br><span class=\"line\">    &lt;i&gt;&lt;/i&gt;</span><br><span class=\"line\">&lt;/div&gt; </span><br></pre></td></tr></table></figure>\n\n<p>那样式该怎样写呢？</p>\n<p>初步设想: 给左侧的遮罩来一个绝对定位，盖在背景图片上面，然后遮罩的背景为白色，设置filter属性，指定blur模糊半径值以及opacity的值，这样能否透过这个遮罩呈现一个模糊的效果呢？说做就做，请看下方代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">html结构：</span><br><span class=\"line\"> &lt;div class=&quot;wrap&quot;&gt;</span><br><span class=\"line\">     &lt;img src=&quot;./images/omni.jpg&quot; alt=&quot;&quot;&gt;</span><br><span class=\"line\">     &lt;i&gt;&lt;/i&gt;</span><br><span class=\"line\"> &lt;/div&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">css样式：</span><br><span class=\"line\">     .wrap &#123;</span><br><span class=\"line\">         margin: 100px auto;</span><br><span class=\"line\">         width: 750px;</span><br><span class=\"line\">         height: 400px;</span><br><span class=\"line\">         position: relative;</span><br><span class=\"line\">         overflow: hidden;</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">     img &#123;</span><br><span class=\"line\">         width: 100%;</span><br><span class=\"line\">         height: auto;</span><br><span class=\"line\">         display: block;</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">     i &#123;</span><br><span class=\"line\">         position: absolute;</span><br><span class=\"line\">         width: 400px;</span><br><span class=\"line\">         height: 400px;</span><br><span class=\"line\">         z-index: 3;</span><br><span class=\"line\">         top: 0;</span><br><span class=\"line\">         left: 0;</span><br><span class=\"line\">         background: #fff;</span><br><span class=\"line\">         filter: opacity(.8) blur(5px);</span><br><span class=\"line\">     &#125; </span><br></pre></td></tr></table></figure>\n\n<p>保存查看一下，浏览器运行效果如下：<br><img src=\"/images/css-mbl/mbl-2.jpg\" alt></p>\n<p>咦，对比下和我们期望的样子，好像差了不止一点点啊！那我们究竟是错在哪儿了，我们再回过头来分析下这个例子，首先filter:blur()是让定义的元素起作用，在这里，我们将filter:blur()定义在左侧遮罩上面了，所以导致了遮罩呈现模糊效果，但是背景不模糊的现象，但是我们实际想要的效果是让背景图片的左侧部分模糊。那我们怎么去修正它呢？或者说filter:blur应该定义在哪里呢？</p>\n<h4 id=\"错误案例2：\"><a href=\"#错误案例2：\" class=\"headerlink\" title=\"错误案例2：\"></a>错误案例2：</h4><p>上述的错误案例让我们意识到，什么元素需要模糊就把filter:blur设置到这个元素上去，而不是想当然的设置一个遮罩，那既然如此，我们是否应该把filter:blur设置到背景图片上去呢？那就试试看吧！</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">html:</span><br><span class=\"line\">    &lt;div class=&quot;wrap&quot;&gt;</span><br><span class=\"line\">        &lt;img src=&quot;./images/omni.jpg&quot; alt=&quot;&quot;&gt;</span><br><span class=\"line\">        &lt;i&gt;&lt;/i&gt;</span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">css:</span><br><span class=\"line\">    .wrap &#123;</span><br><span class=\"line\">        margin: 100px auto;</span><br><span class=\"line\">        width: 750px;</span><br><span class=\"line\">        height: 400px;</span><br><span class=\"line\">        position: relative;</span><br><span class=\"line\">        overflow: hidden;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    img &#123;</span><br><span class=\"line\">        width: 100%;</span><br><span class=\"line\">        height: auto;</span><br><span class=\"line\">        display: block;</span><br><span class=\"line\">        filter: blur(5px)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    i &#123;</span><br><span class=\"line\">        position: absolute;</span><br><span class=\"line\">        width: 400px;</span><br><span class=\"line\">        height: 400px;</span><br><span class=\"line\">        z-index: 3;</span><br><span class=\"line\">        top: 0;</span><br><span class=\"line\">        left: 0;</span><br><span class=\"line\">        background: #fff;</span><br><span class=\"line\">        opacity: .5;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n\n<p>保存一下运行，结果如下:<br><img src=\"/images/css-mbl/mbl-3.jpg\" alt></p>\n<p>很遗憾，依旧不是我们期待的样子，因为我们将filter:blur()直接设置到背景图片上面，所以导致整张背景图片都是模糊的了。</p>\n<h3 id=\"正确的使用filter-blur\"><a href=\"#正确的使用filter-blur\" class=\"headerlink\" title=\"正确的使用filter:blur\"></a>正确的使用filter:blur</h3><p>上述的经验告诉我们直接将filter:blur()设置到背景图片上面是行不通的，无法保证一边模糊一边清晰，肯定需要分两个块做，一个块不做处理，用来展示图片，一个块用来存放模糊的区域，这让我们忍不住想起background属性，更加惊喜的想到background的cover属性，接下来思路就清晰了：</p>\n<ul>\n<li>用一个容器存放背景图片，不做任何处理</li>\n<li>遮罩容器固定宽高，使用absolute定位固定在背景图片的左侧，同时遮罩容器也用背景图片做背景，设置background-position:left center,然后设置高斯模糊，让遮罩上模糊的区域和背景容器右侧部分连贯起来，形成一张图片左侧模糊右侧清晰的视觉效果。</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">html:</span><br><span class=\"line\">    &lt;div class=&quot;wrap&quot;&gt;</span><br><span class=\"line\">        &lt;div class=&quot;img-box&quot;&gt;&lt;/div&gt;</span><br><span class=\"line\">        &lt;i&gt;&lt;/i&gt;</span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">css:</span><br><span class=\"line\">    .wrap &#123;</span><br><span class=\"line\">        margin: 100px auto;</span><br><span class=\"line\">        width: 750px;</span><br><span class=\"line\">        height: 400px;</span><br><span class=\"line\">        position: relative;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    .img-box &#123;</span><br><span class=\"line\">        width: 750px;</span><br><span class=\"line\">        height: 400px;</span><br><span class=\"line\">        background: url(&apos;./images/omni.jpg&apos;) no-repeat center center /auto 100%;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    i &#123;</span><br><span class=\"line\">        position: absolute;</span><br><span class=\"line\">        width: 350px;</span><br><span class=\"line\">        height: 400px;</span><br><span class=\"line\">        background: url(&apos;./images/omni.jpg&apos;) no-repeat left center / cover;</span><br><span class=\"line\">        z-index: 3;</span><br><span class=\"line\">        top: 0;</span><br><span class=\"line\">        left: 0;</span><br><span class=\"line\">        filter: blur(5px);</span><br><span class=\"line\">    &#125;   </span><br></pre></td></tr></table></figure>\n\n<p>效果如下：<br><img src=\"/images/css-mbl/mbl-4.jpg\" alt><br>看起来好像还不错，一边模糊一边清晰，不过模糊区域好像有些溢出了，那就我们就给主容器设置溢出隐藏嘛</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">html:</span><br><span class=\"line\">&lt;div class=&quot;wrap&quot;&gt;</span><br><span class=\"line\">    &lt;div class=&quot;img-box&quot;&gt;&lt;/div&gt;</span><br><span class=\"line\">    &lt;i&gt;&lt;/i&gt;</span><br><span class=\"line\">&lt;/div&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">css:</span><br><span class=\"line\">.wrap &#123;</span><br><span class=\"line\">    margin: 100px auto;</span><br><span class=\"line\">    width: 750px;</span><br><span class=\"line\">    height: 400px;</span><br><span class=\"line\">    position: relative;</span><br><span class=\"line\">    overflow: hidden;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.img-box &#123;</span><br><span class=\"line\">    width: 750px;</span><br><span class=\"line\">    height: 400px;</span><br><span class=\"line\">    background: url(&apos;./images/omni.jpg&apos;) no-repeat center center / 100% auto;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">i &#123;</span><br><span class=\"line\">    position: absolute;</span><br><span class=\"line\">    width: 350px;</span><br><span class=\"line\">    height: 400px;</span><br><span class=\"line\">    background: url(&apos;./images/omni.jpg&apos;) no-repeat left center / cover;</span><br><span class=\"line\">    z-index: 3;</span><br><span class=\"line\">    top: 0;</span><br><span class=\"line\">    left: 0;</span><br><span class=\"line\">    filter: blur(5px);</span><br><span class=\"line\">&#125; </span><br></pre></td></tr></table></figure>\n\n<p>效果如下：<br><img src=\"/images/css-mbl/mbl-5.jpg\" alt><br>这下看起来很不错哦，不过貌似还需要做最后一步哦，做一个白色透明层放在模糊区域上面，让效果变得更加明显</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> html: </span><br><span class=\"line\"> &lt;div class=&quot;wrap&quot;&gt;</span><br><span class=\"line\">    &lt;div class=&quot;img-box&quot;&gt;&lt;/div&gt;</span><br><span class=\"line\">    &lt;i&gt;&lt;/i&gt;</span><br><span class=\"line\">    &lt;span&gt;&lt;/span&gt;</span><br><span class=\"line\">&lt;/div&gt;   </span><br><span class=\"line\"></span><br><span class=\"line\"> css:</span><br><span class=\"line\"></span><br><span class=\"line\"> .wrap &#123;</span><br><span class=\"line\">     margin: 100px auto;</span><br><span class=\"line\">     width: 750px;</span><br><span class=\"line\">     height: 400px;</span><br><span class=\"line\">     position: relative;</span><br><span class=\"line\">     overflow: hidden;</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"> .img-box &#123;</span><br><span class=\"line\">     width: 750px;</span><br><span class=\"line\">     height: 400px;</span><br><span class=\"line\">     background: url(&apos;./images/omni.jpg&apos;) no-repeat center center / 100% auto;</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"> i &#123;</span><br><span class=\"line\">     position: absolute;</span><br><span class=\"line\">     width: 350px;</span><br><span class=\"line\">     height: 400px;</span><br><span class=\"line\">     background: url(&apos;./images/omni.jpg&apos;) no-repeat left center / cover;</span><br><span class=\"line\">     z-index: 3;</span><br><span class=\"line\">     top: 0;</span><br><span class=\"line\">     left: 0;</span><br><span class=\"line\">     filter: blur(10px);</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"> span &#123;</span><br><span class=\"line\">     position: absolute;</span><br><span class=\"line\">     width: 350px;</span><br><span class=\"line\">     height: 400px;  </span><br><span class=\"line\">     z-index: 5;</span><br><span class=\"line\">     top: 0;</span><br><span class=\"line\">     left: 0;</span><br><span class=\"line\">     background: #fff;</span><br><span class=\"line\">     opacity: .2;</span><br><span class=\"line\"> &#125;     </span><br></pre></td></tr></table></figure>\n\n<p>效果如下：<br><img src=\"/images/css-mbl/mbl-6.jpg\" alt><br>这样看起来完全没有问题了哦，效果是不是棒棒哒？</p>\n","categories":["css"],"tags":["css毛玻璃特效"]},{"title":"搬瓦工搭建一个梯子（BandwagonHost+shadowsocks）","url":"http://yoursite.com/2019/06/10/bandwagonHost/","content":"<h2 id=\"概述\"><a href=\"#概述\" class=\"headerlink\" title=\"概述\"></a>概述</h2><p>作为一名程序员，我们时常需要查阅一些国外的技术文档，但是在国内我们无法直接访问到国外网站，所以这时候我们就需要搭建一个梯子，通过这个梯子去查看墙外的东西。</p>\n<h2 id=\"几种方式\"><a href=\"#几种方式\" class=\"headerlink\" title=\"几种方式\"></a>几种方式</h2><ul>\n<li>蓝灯是我最先使用的vpn软件，开源，每月有几百兆的免费流量，当然也有付费版本。</li>\n<li>后来也使用过expressVPN，大概用了一个月左右，速度还是很快的，但是个人觉得价格有些偏高了。</li>\n<li>再后面同事推荐了BandwagonHost，相对而言，个人觉得性价比不错，价格也在能接受的范围内。</li>\n</ul>\n<h2 id=\"购买BandwagonHost服务\"><a href=\"#购买BandwagonHost服务\" class=\"headerlink\" title=\"购买BandwagonHost服务\"></a>购买BandwagonHost服务</h2><p>访问地址:</p>\n<ul>\n<li><a href=\"https://bandwagonhost.com/\" target=\"_blank\" rel=\"noopener\">官方地址</a>，貌似需要翻墙才能访问，所以没有翻墙的情况下可以访问下面的地址。</li>\n<li><a href=\"https://bwh88.net/\" target=\"_blank\" rel=\"noopener\">搬瓦工官网中国镜像站</a>。</li>\n</ul>\n<p>购买流程</p>\n<ul>\n<li><p>第一步：点击VPS Hosting按钮，进入到服务套餐面板，根据需要选择套餐，点击order。<br><img src=\"/images/%E6%90%AC%E7%93%A6%E5%B7%A5%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E6%A2%AF%E5%AD%90/bwg1.jpg\" alt><br><img src=\"/images/%E6%90%AC%E7%93%A6%E5%B7%A5%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E6%A2%AF%E5%AD%90/bwg2.jpg\" alt></p>\n</li>\n<li><p>第二步：点击Add to cart<br><img src=\"/images/%E6%90%AC%E7%93%A6%E5%B7%A5%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E6%A2%AF%E5%AD%90/bwg3.jpg\" alt></p>\n</li>\n<li><p>第三步： 点击checkout,填写用户信息，如果之前有填过这些信息也可以直接点击登录，然后选择支付方式，微信/支付宝都支持，勾选同意，然后点击complete order。<br><img src=\"/images/%E6%90%AC%E7%93%A6%E5%B7%A5%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E6%A2%AF%E5%AD%90/bwg4.jpg\" alt><br><img src=\"/images/%E6%90%AC%E7%93%A6%E5%B7%A5%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E6%A2%AF%E5%AD%90/bwg5.jpg\" alt></p>\n</li>\n<li><p>第四步： 点击Pay Now，会根据你选择的支付方式调出对应的支付界面。<br><img src=\"/images/%E6%90%AC%E7%93%A6%E5%B7%A5%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E6%A2%AF%E5%AD%90/bwg6.jpg\" alt></p>\n</li>\n<li><p>第五步： 支付成功之后我们可以登录注册邮箱，看到一些使用步骤，还有登录信息。返回到官网，点击My Services,可以看到刚刚购买的套餐，点KiwiVM Control Panel， 进入到kiwiVM界面，在主界面，我们可以看到服务器的ip地址，SSH端口号，以及操作系统等信息。<br><img src=\"/images/%E6%90%AC%E7%93%A6%E5%B7%A5%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E6%A2%AF%E5%AD%90/bwg7.jpg\" alt><br><img src=\"/images/%E6%90%AC%E7%93%A6%E5%B7%A5%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E6%A2%AF%E5%AD%90/bwg8.jpg\" alt></p>\n</li>\n<li><p>第六步：为安全起见我们可以点击Root password modification按钮去修改密码，不过这个密码一定要记住，后面还需要用到。点击start，开启服务。<br><img src=\"/images/%E6%90%AC%E7%93%A6%E5%B7%A5%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E6%A2%AF%E5%AD%90/bwg9.jpg\" alt></p>\n</li>\n</ul>\n<h2 id=\"使用putty搭建ss服务器\"><a href=\"#使用putty搭建ss服务器\" class=\"headerlink\" title=\"使用putty搭建ss服务器\"></a>使用putty搭建ss服务器</h2><h3 id=\"方案\"><a href=\"#方案\" class=\"headerlink\" title=\"方案\"></a>方案</h3><p>原本的KiwiVM Control Panel侧边导航栏有一键安装Shadowsocks server的按钮，但是自2018年起，按钮就被隐藏了，网上查阅了各种资料，得到如下几种方案（如果没有Shadowsocks server按钮的话可以进行参考）：</p>\n<ul>\n<li><p>方案1： 浏览器打开网址<code>https://kiwivm.64clouds.com/main-exec.php?mode=extras_shadowsocks，直接进入到安装Shadowsocks server</code>的界面，但是我在我的电脑上打开是一片空白，所以我采用第二种方案，各位看官可以都试着尝试下。</p>\n</li>\n<li><p>方案2：下载putty软件，通过putty搭建ss服务器</p>\n</li>\n</ul>\n<h2 id=\"使用putty\"><a href=\"#使用putty\" class=\"headerlink\" title=\"使用putty\"></a>使用putty</h2><h3 id=\"putty下载地址\"><a href=\"#putty下载地址\" class=\"headerlink\" title=\"putty下载地址\"></a>putty下载地址</h3><ul>\n<li><a href=\"https://pan.baidu.com/s/13p39wsC58im99nxYKOyQzA\" target=\"_blank\" rel=\"noopener\">windows下载地址</a></li>\n<li><a href=\"https://www.ttrar.com/mac/soft/1295.html\" target=\"_blank\" rel=\"noopener\">mac下载地址</a></li>\n</ul>\n<h3 id=\"使用步骤\"><a href=\"#使用步骤\" class=\"headerlink\" title=\"使用步骤\"></a>使用步骤</h3><ul>\n<li>第一步：打开putty界面，输入服务器IP及端口（在KiwiVM Control Panel可以查看到），点击open，弹出的弹窗选择是，进入putty命令窗口。</li>\n<li>第二步：输入root，然后粘贴vps的密码，回车。</li>\n<li>第三步：输入wget — no-check-certificate -O shadowsocks.sh <a href=\"https://raw.githubusercontent.com/teddysun/shadowsocks_install/master/shadowsocks.sh\" target=\"_blank\" rel=\"noopener\">https://raw.githubusercontent.com/teddysun/shadowsocks_install/master/shadowsocks.sh</a></li>\n<li>如果报错wget: command not found，那么执行yum install wget,再执行第三步。</li>\n<li>第四步：键入chmod +x shadowsocks.sh</li>\n<li>第五步：键入./shadowsocks.sh 2&gt;&amp;1 | tee shadowsocks.log</li>\n<li>第六步：设置密码和端口号</li>\n<li>第七步：选择加密方式： 输入7，回车，然后就坐等安装完成。</li>\n<li>第八步： 安装完成之后会显示一段信息（这段信息后面会应用到配置shadowsocks客户端）：<ul>\n<li>Your Server IP ip地址</li>\n<li>Your Server Port 端口号</li>\n<li>Your Password 密码</li>\n<li>Your Encryption Method 加密方式</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"配置shadowsocks\"><a href=\"#配置shadowsocks\" class=\"headerlink\" title=\"配置shadowsocks\"></a>配置shadowsocks</h3><ul>\n<li>下载shadowsocks客户端，<a href=\"https://github.com/shadowsocks/ShadowsocksX-NG/releases\" target=\"_blank\" rel=\"noopener\">https://github.com/shadowsocks/ShadowsocksX-NG/releases</a></li>\n<li>打开shadowsocks进行配置，点击服务器进行服务器设置<br><img src=\"/images/%E6%90%AC%E7%93%A6%E5%B7%A5%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E6%A2%AF%E5%AD%90/sd1.jpg\" alt></li>\n<li>在服务器设置面板点击加号，进行新服务器的配置，输入前面我们保留下来的信息，然后点击确定，就可以开始任性上网啦~~<br><img src=\"/images/%E6%90%AC%E7%93%A6%E5%B7%A5%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E6%A2%AF%E5%AD%90/sd2.jpg\" alt></li>\n</ul>\n<h2 id=\"相关链接\"><a href=\"#相关链接\" class=\"headerlink\" title=\"相关链接\"></a>相关链接</h2><p><a href=\"https://www.diycode.cc/topics/1247\" target=\"_blank\" rel=\"noopener\">搬瓦工一键搭建 ss 手把手教你搭建自己的 ss 翻墙服务器</a><br><a href=\"https://www.bwgyhw.cn/\" target=\"_blank\" rel=\"noopener\">搬瓦工优惠网</a><br><a href=\"https://www.freeluffy.com/bandwagon-host-ss/\" target=\"_blank\" rel=\"noopener\">最新搬瓦工搭建ss教程：后台一键搞定无需手动安装</a></p>\n","categories":["科学上网"],"tags":["搬瓦工,科学上网"]},{"title":"flex布局","url":"http://yoursite.com/2019/05/27/flex-layout/","content":"<h2 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h2><p>在网页开发当中，我们经常会面临这样一个场景：让一个块级元素在其父容器中<code>垂直水平居中</code>。如何实现这样一个功能呢？我们先来看看传统的解决方案：</p>\n<ul>\n<li>方案1：</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">  html:</span><br><span class=\"line\">    &lt;div class=&quot;container&quot;&gt;</span><br><span class=\"line\">        &lt;div class=&quot;son-container&quot;&gt;</span><br><span class=\"line\">            我是子元素！！！</span><br><span class=\"line\">        &lt;/div&gt;</span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\">    </span><br><span class=\"line\">css:</span><br><span class=\"line\"></span><br><span class=\"line\">    .container &#123;</span><br><span class=\"line\">        width: 400px;</span><br><span class=\"line\">        height: 400px;</span><br><span class=\"line\">        margin: 50px auto;</span><br><span class=\"line\">        background: yellow;</span><br><span class=\"line\">        position: relative;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    .son-container &#123;</span><br><span class=\"line\">        width: 200px;</span><br><span class=\"line\">        height: 200px;</span><br><span class=\"line\">        background: pink;</span><br><span class=\"line\">        position: absolute;</span><br><span class=\"line\">        margin: auto;</span><br><span class=\"line\">        top: 0;</span><br><span class=\"line\">        right: 0;</span><br><span class=\"line\">        bottom: 0;</span><br><span class=\"line\">        left: 0;</span><br><span class=\"line\">    &#125;    </span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>方案2：</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">html: </span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;div class=&quot;container&quot;&gt;</span><br><span class=\"line\">        &lt;div class=&quot;son-container&quot;&gt;</span><br><span class=\"line\">            我是子元素！！！</span><br><span class=\"line\">        &lt;/div&gt;</span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\">    </span><br><span class=\"line\">css: </span><br><span class=\"line\"></span><br><span class=\"line\">    .container &#123;</span><br><span class=\"line\">        width: 400px;</span><br><span class=\"line\">        height: 400px;</span><br><span class=\"line\">        margin: 50px auto;</span><br><span class=\"line\">        background: yellow;</span><br><span class=\"line\">        position: relative;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    .son-container &#123;</span><br><span class=\"line\">        width: 200px;</span><br><span class=\"line\">        height: 200px;</span><br><span class=\"line\">        background: pink;</span><br><span class=\"line\">        position: absolute;</span><br><span class=\"line\">        top: 50%;</span><br><span class=\"line\">        left: 50%;</span><br><span class=\"line\">        margin-top: -100px;</span><br><span class=\"line\">        margin-left: -100px;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>以上两种方案都能解决水平垂直居中问题，但是有一个前提就是<code>子元素的宽高就是已知</code>的。但是在很多时候子元素的高度并不是固定的，而是由内容撑开的，所以上述两种方式就出现了局限性。</p>\n<ul>\n<li>方案3：</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">   html:</span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;div class=&quot;container&quot;&gt;</span><br><span class=\"line\">        &lt;div class=&quot;son-container&quot;&gt;</span><br><span class=\"line\">            &lt;p&gt;段落1&lt;/p&gt;</span><br><span class=\"line\">            &lt;p&gt;段落2&lt;/p&gt;</span><br><span class=\"line\">            &lt;p&gt;段落3&lt;/p&gt;</span><br><span class=\"line\">            &lt;p&gt;段落4&lt;/p&gt;</span><br><span class=\"line\">        &lt;/div&gt;</span><br><span class=\"line\">        &lt;img src=&quot;./images/cat.jpg&quot; alt=&quot;&quot;&gt;</span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\">    </span><br><span class=\"line\">css:</span><br><span class=\"line\">    .container &#123;</span><br><span class=\"line\">        width: 400px;</span><br><span class=\"line\">        height: auto;</span><br><span class=\"line\">        margin: 50px auto;</span><br><span class=\"line\">        background: yellow;</span><br><span class=\"line\">        position: relative;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    .container img &#123;</span><br><span class=\"line\">        width: 100%;</span><br><span class=\"line\">        height: auto;</span><br><span class=\"line\">        display: block;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    .son-container &#123;</span><br><span class=\"line\">        width: 200px;</span><br><span class=\"line\">        height: 200px;</span><br><span class=\"line\">        background: pink;</span><br><span class=\"line\">        position: absolute;</span><br><span class=\"line\">        top: 50%;</span><br><span class=\"line\">        left: 50%;</span><br><span class=\"line\">        transform: translate(-50%, -50%);</span><br><span class=\"line\">    &#125; </span><br></pre></td></tr></table></figure>\n\n<p>这种方式也能解决垂直水平居中的问题，并且子元素的高度可以不固定。</p>\n<p>虽然上述这些方案可以做到垂直水平居中，但还是有其局限性和不便利性（显而易见的一点就是必须要用到定位），那么有没有一种方式可以优雅便捷的实现这一功能呢？答案是肯定的，那就让我们一起来认识下flex布局吧。</p>\n<h2 id=\"初识flex\"><a href=\"#初识flex\" class=\"headerlink\" title=\"初识flex\"></a>初识flex</h2><h2 id=\"什么是flex布局\"><a href=\"#什么是flex布局\" class=\"headerlink\" title=\"什么是flex布局\"></a>什么是flex布局</h2><p>一种弹性布局，被定义了display:flex属性的元素叫做伸缩容器，而其子元素也就变成伸缩项目(flex item)。伸缩容器中的子元素可以在垂直或者水平任意方向上进行排列，同时也能应需求伸缩尺寸。</p>\n<p>浏览器对flex的支持程度：<br><img src=\"/images/flex%E5%B8%83%E5%B1%80/flex.jpg\" alt><br>如图可以看出浏览器支持程度还是不错的。</p>\n<h2 id=\"了解flex\"><a href=\"#了解flex\" class=\"headerlink\" title=\"了解flex\"></a>了解flex</h2><h3 id=\"小试牛刀\"><a href=\"#小试牛刀\" class=\"headerlink\" title=\"小试牛刀\"></a>小试牛刀</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">html: </span><br><span class=\"line\">    &lt;ul&gt;</span><br><span class=\"line\">        &lt;li&gt;列表1&lt;/li&gt;</span><br><span class=\"line\">        &lt;li&gt;列表2&lt;/li&gt;</span><br><span class=\"line\">        &lt;li&gt;列表3&lt;/li&gt;</span><br><span class=\"line\">        &lt;li&gt;列表4&lt;/li&gt;</span><br><span class=\"line\">        &lt;li&gt;列表5&lt;/li&gt;</span><br><span class=\"line\">        &lt;li&gt;列表6&lt;/li&gt;</span><br><span class=\"line\">    &lt;/ul&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">css: </span><br><span class=\"line\">    ul &#123;</span><br><span class=\"line\">        width: 1000px;;</span><br><span class=\"line\">        height: auto;</span><br><span class=\"line\">        margin: 100px auto;</span><br><span class=\"line\">        background: yellow;</span><br><span class=\"line\">        display: flex;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    li &#123;</span><br><span class=\"line\">        width: 100px;</span><br><span class=\"line\">        height: 50px;</span><br><span class=\"line\">        margin: 10px;</span><br><span class=\"line\">        background: pink;</span><br><span class=\"line\">        list-style: none;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n\n<p>先看看效果：<br><img src=\"/images/flex%E5%B8%83%E5%B1%80/ulliflex.jpg\" alt><br>我们都知道任何块级元素，没做特殊处理的情况下都是从上往下排列，而在本例中，仅仅只是给父元素ul加了个display：flex，li元素就直接从左往右进行排列了，是不是瞬间觉得好神奇，好强大。那接下来我们就来看看flex有哪些强大的属性。</p>\n<h3 id=\"flex基础模型\"><a href=\"#flex基础模型\" class=\"headerlink\" title=\"flex基础模型\"></a>flex基础模型</h3><p>在了解flex属性之前还是有必要了解下图的:<br><img src=\"/images/flex%E5%B8%83%E5%B1%80/flexmodel.jpg\" alt><br>默认情况下水平方向为主轴，垂直方向上为侧轴。<br>在实际开发过程中主轴的方向和项目排列的方向保持一致，即：</p>\n<ul>\n<li>flex-direction取值为row/row-reverse 则主轴为水平方向，row（从左往右），row-reverse（从右往左） ；侧轴为垂直方向，从上往下；</li>\n<li>flex-direction取值为column/column-reverse 则主轴为垂直方向，column（从上往下），column-reverse（从下往上）；侧轴为水平方向，从左往右；</li>\n</ul>\n<h3 id=\"作用在flex容器上面的属性\"><a href=\"#作用在flex容器上面的属性\" class=\"headerlink\" title=\"作用在flex容器上面的属性\"></a>作用在flex容器上面的属性</h3><h4 id=\"flex-容器的单个属性\"><a href=\"#flex-容器的单个属性\" class=\"headerlink\" title=\"flex 容器的单个属性\"></a>flex 容器的单个属性</h4><p>1、flex-direction 定义子元素(flex item)的排列方式,四个取值</p>\n<ul>\n<li>row 子元素从左往右排列</li>\n<li>column 子元素从上往下排列</li>\n<li>row-revers 从右往左排列</li>\n<li>column-reverse 从下往上排列</li>\n</ul>\n<p>让我来看看对比效果图吧:<br><img src=\"/images/flex%E5%B8%83%E5%B1%80/flex-direction.jpg\" alt></p>\n<p>2、flex-wrap 用来处理当容器放不下所有的flex item时的情况，类似与文字的换不换行。</p>\n<ul>\n<li>wrap 当flex容器放不下所有item项时会换行排列</li>\n<li>nowrap Flex项目在Flex容器内不换行排列,不换行但是flex item的宽度会发生变化</li>\n<li>wrap-reverse 当flex容器放不下所有item项时会换行排列，但是和wrap的方向相反</li>\n</ul>\n<p>让我来看看对比效果图吧:<br><img src=\"/images/flex%E5%B8%83%E5%B1%80/flex-wrap.jpg\" alt></p>\n<p>3、justify-content 设置flex item在主轴上面的对齐方式</p>\n<ul>\n<li>flex-start 主轴方向的起始位置对齐</li>\n<li>flex-end 主轴方向的结束位置对齐</li>\n<li>center 在主轴上面居中对齐</li>\n<li>space-between 两端对齐，两端item与边缘间距为0，剩余间距平均分配</li>\n<li>space-around 让每个flex项目都有相同的间距，最边上item的间距是其他相邻item间距的一半。</li>\n</ul>\n<p>文字描述还是略显晦涩模糊，直接上图:<br><img src=\"/images/flex%E5%B8%83%E5%B1%80/justify-content.jpg\" alt></p>\n<p>4、align-items 设置flex item 在侧轴上面的对齐方式</p>\n<ul>\n<li>flex-start 关于侧轴方向的起始位置对齐</li>\n<li>flex-end 关于侧轴方向的结束位置对齐</li>\n<li>center 关于侧轴方向的中间位置对齐</li>\n<li>stretch 在侧轴方向上拉伸item的宽/高度至容器大小</li>\n<li>baseline 关于item排列方向上第一个项目的基线对齐</li>\n</ul>\n<p>对比图:<br><img src=\"/images/flex%E5%B8%83%E5%B1%80/align-items.jpg\" alt></p>\n<p>5、align-content 只有当设置了flex-wrap: wrap属性时才会生效。用来定义多行item的在侧轴上的排列方式</p>\n<ul>\n<li>stretch 拉伸flex item项目（前提侧轴方向上的边没有设置长度,如果设置了，就用间距平分容器空间）， 沿侧轴适应flex容器可用空间。</li>\n<li>flex-start 关于侧轴方向的起始位置对齐</li>\n<li>flex-end 关于侧轴方向上的终点位置对齐</li>\n<li>center 关于侧轴方向上居中对齐</li>\n</ul>\n<p>对比图:<br><img src=\"/images/flex%E5%B8%83%E5%B1%80/align-contents.jpg\" alt></p>\n<h4 id=\"flex容器的复合属性\"><a href=\"#flex容器的复合属性\" class=\"headerlink\" title=\"flex容器的复合属性\"></a>flex容器的复合属性</h4><p>1、flex-flow 该属性是flex-direction和flex-wrap的复合属性</p>\n<ul>\n<li>语法格式： flex-flow: flex-direction flex-wrap;</li>\n<li>例子： flex-flow: row wrap;</li>\n</ul>\n<h3 id=\"作用在子元素（item上的属性）\"><a href=\"#作用在子元素（item上的属性）\" class=\"headerlink\" title=\"作用在子元素（item上的属性）\"></a>作用在子元素（item上的属性）</h3><h4 id=\"flex-item-单个属性\"><a href=\"#flex-item-单个属性\" class=\"headerlink\" title=\"flex item 单个属性\"></a>flex item 单个属性</h4><p>1、order 定义flex项目在容器中的排列顺序，flex项目可以根据order从低到高排列</p>\n<ul>\n<li>取值：数值。可正可负，默认为0</li>\n<li>例子：<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">html: </span><br><span class=\"line\">&lt;li style=&quot;background: red; font-size: 12px;&quot; &gt;列表1&lt;/li&gt;</span><br><span class=\"line\">&lt;li  style=&quot;background: green&quot;&gt;列表2列表2列表2列表2&lt;/li&gt;</span><br><span class=\"line\">&lt;li style=&quot;background: orange&quot;&gt;列表3&lt;/li&gt;</span><br><span class=\"line\">&lt;li style=&quot;background: blue&quot;&gt;列表4&lt;/li&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">css:</span><br><span class=\"line\">    ul &#123;</span><br><span class=\"line\">        width: 500px;;</span><br><span class=\"line\">        height: 300px;</span><br><span class=\"line\">        margin: 100px auto;</span><br><span class=\"line\">        background: yellow;</span><br><span class=\"line\">        display: flex;</span><br><span class=\"line\">        flex-direction:column;</span><br><span class=\"line\">        flex-wrap: wrap;</span><br><span class=\"line\">        align-content: stretch</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    li &#123;</span><br><span class=\"line\">        width: 100px;</span><br><span class=\"line\">        height: 50px;</span><br><span class=\"line\">        margin: 5px;</span><br><span class=\"line\">        background: pink;</span><br><span class=\"line\">        list-style: none;</span><br><span class=\"line\">        font-size: 18px;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    li:nth-child(1) &#123;</span><br><span class=\"line\">        order: 2;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n\n\n</li>\n</ul>\n<p>效果图：<br><img src=\"/images/flex%E5%B8%83%E5%B1%80/order.jpg\" alt></p>\n<p>2、flex-grow: 设置元素的生长因子（当子元素的总宽/高度小于父容器的宽度时，如何分配父容器的空间）</p>\n<ul>\n<li>默认值： 0，表示不伸张；</li>\n<li>取值： 0 或者 大于0的正数</li>\n<li>计算公式：itemA 的 宽/高 实际取值 = itemA原(宽|高)取值 + 父容器剩余空间*比例因子。</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">html:</span><br><span class=\"line\">    &lt;ul&gt;</span><br><span class=\"line\">        &lt;li style=&quot;background: red;&quot; &gt;列表1&lt;/li&gt;</span><br><span class=\"line\">        &lt;li  style=&quot;background: green&quot;&gt;列表2&lt;/li&gt;</span><br><span class=\"line\">    &lt;/ul&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">css: </span><br><span class=\"line\">    ul &#123;</span><br><span class=\"line\">        width: 500px;;</span><br><span class=\"line\">        height: 300px;</span><br><span class=\"line\">        margin: 100px auto;</span><br><span class=\"line\">        background: yellow;</span><br><span class=\"line\">        display: flex;</span><br><span class=\"line\">        flex-direction:row;</span><br><span class=\"line\">        align-items: flex-start;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    li &#123;</span><br><span class=\"line\">        width: 200px;</span><br><span class=\"line\">        height: 200px;</span><br><span class=\"line\">        background: pink;</span><br><span class=\"line\">        list-style: none;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    li:nth-child(1) &#123;</span><br><span class=\"line\">        flex-grow: 2;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    li:nth-child(2) &#123;</span><br><span class=\"line\">        flex-grow: 3;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n\n<p>效果图如下：<br><img src=\"/images/flex%E5%B8%83%E5%B1%80/flex-grow.jpg\" alt></p>\n<p>3、flex-shrink: 设置元素的收缩因子【当子元素的总宽/高度（取决于主轴方向）大于父容器的宽/高值时，如何缩小自己的宽/高值的】</p>\n<ul>\n<li>默认为1</li>\n<li>取值为 0 或者任意正数；取0时表示不收缩</li>\n<li>计算公式 itemA = itemA 原 宽|高 - 子元素超出的长度 * 比例因子</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">html:</span><br><span class=\"line\">    &lt;li style=&quot;background: red;&quot;&gt;列表1&lt;/li&gt;</span><br><span class=\"line\">    &lt;li style=&quot;background: green&quot;&gt;列表2&lt;/li&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">css:</span><br><span class=\"line\">    ul &#123;</span><br><span class=\"line\">        width: 500px;;</span><br><span class=\"line\">        height: 300px;</span><br><span class=\"line\">        margin: 100px auto;</span><br><span class=\"line\">        background: yellow;</span><br><span class=\"line\">        display: flex;</span><br><span class=\"line\">        flex-direction:row;</span><br><span class=\"line\">        align-items: flex-start;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    li &#123;         </span><br><span class=\"line\">        height: 200px;</span><br><span class=\"line\">        background: pink;</span><br><span class=\"line\">        list-style: none;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    li:nth-child(1) &#123;</span><br><span class=\"line\">        width: 200px;</span><br><span class=\"line\">        flex-shrink: 2;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    li:nth-child(2) &#123;</span><br><span class=\"line\">        width: 400px;</span><br><span class=\"line\">        flex-shrink: 3;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n\n<p>效果图如下：<br><img src=\"/images/flex%E5%B8%83%E5%B1%80/flex-shrink.jpg\" alt></p>\n<p>4、flex-basis 指定flex元素在主轴方向上的宽/高（取决于主轴方向）值，它会使得被设定了width/height的属性值失效。</p>\n<ul>\n<li>默认为auto;</li>\n<li>设定值时需要带上单位，单位和width属性的单位一样，即 %|| em|| rem || px …</li>\n<li>当设置了flex-basis值之后，item 主轴方向上的边长取值为flex-basis，width/height 会失效。</li>\n<li>实例：<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">html: </span><br><span class=\"line\">    &lt;li style=&quot;background: red;&quot;&gt;列表1&lt;/li&gt;</span><br><span class=\"line\">    &lt;li style=&quot;background: green&quot;&gt;列表2&lt;/li&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">css:</span><br><span class=\"line\">    ul &#123;</span><br><span class=\"line\">        width: 500px;;</span><br><span class=\"line\">        height: 300px;</span><br><span class=\"line\">        margin: 100px auto;</span><br><span class=\"line\">        background: yellow;</span><br><span class=\"line\">        display: flex;</span><br><span class=\"line\">        flex-direction:row;</span><br><span class=\"line\">        align-items: flex-start;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    li &#123;   </span><br><span class=\"line\">        height: 200px;</span><br><span class=\"line\">        background: pink;</span><br><span class=\"line\">        list-style: none;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    li:nth-child(1) &#123;</span><br><span class=\"line\">        width: 150px;</span><br><span class=\"line\">        flex-basis: 160px;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    li:nth-child(2) &#123;</span><br><span class=\"line\">        width: 150px;</span><br><span class=\"line\">        flex-basis: 280px;</span><br><span class=\"line\">    &#125; </span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n<p>效果图如下：<br><img src=\"/images/flex%E5%B8%83%E5%B1%80/flex-basis.jpg\" alt></p>\n<p>5、align-self 用来改变某一个（单个）flex item 在侧轴方向上的位置，而不影响相邻的弹性项目。</p>\n<ul>\n<li>auto 取值会被设置成父容器的align-items的值，如果父容器没有设置align-items属性值，那么则会取值为stretch</li>\n<li>flex-start 被设置的flex item元素会被对齐到侧轴的首端</li>\n<li>flex-end 被设置的flex item元素会被对齐到侧轴的末端</li>\n<li>center 被设置的flex item元素会被对齐到侧轴的中间位置</li>\n<li>baseline 沿基线对齐（设置在一组item项目上面才能看到效果）</li>\n<li>stretch 被设置的元素将会基于容器的宽和高，按照自身 margin box 的 cross-size 拉伸</li>\n</ul>\n<p>对比图如下：<br><img src=\"/images/flex%E5%B8%83%E5%B1%80/align-self.jpg\" alt></p>\n<h4 id=\"flex-item-综合属性\"><a href=\"#flex-item-综合属性\" class=\"headerlink\" title=\"flex item 综合属性\"></a>flex item 综合属性</h4><p>1、flex 是flex-grow、flex-shrink、flex-basis 三个属性的符合属性</p>\n<ul>\n<li>默认取值 flex: 0 1 auto;</li>\n<li>用法: flex: flex-grow flex-shrink flex-basis;</li>\n</ul>\n<h2 id=\"拓展延伸\"><a href=\"#拓展延伸\" class=\"headerlink\" title=\"拓展延伸\"></a>拓展延伸</h2><ul>\n<li><a href=\"https://www.zhihu.com/question/271492607/answer/364298001\" target=\"_blank\" rel=\"noopener\">flex布局对性能的影响主要体现在哪方面？ - Lucas HC的回答 - 知乎</a></li>\n<li><a href=\"https://www.html5rocks.com/zh/tutorials/internals/howbrowserswork/\" target=\"_blank\" rel=\"noopener\">浏览器的工作原理：新式网络浏览器幕后揭秘</a></li>\n<li><a href=\"http://www.wdshare.org/article/5770ed9753c50d1a18f64a97\" target=\"_blank\" rel=\"noopener\">渲染性能</a></li>\n<li><a href=\"https://github.com/abcrun/abcrun.github.com/issues/17\" target=\"_blank\" rel=\"noopener\">图解浏览器渲染过程 - 基于Webkit/Blink内核Chrome浏览器</a></li>\n<li><a href=\"https://csstriggers.com/\" target=\"_blank\" rel=\"noopener\">css Triggers</a></li>\n</ul>\n","categories":["css"],"tags":["css布局, flex"]},{"title":"立个flag","url":"http://yoursite.com/2019/05/23/立个flag/","content":"<p>从小到大，在应试教育的影响下，理所当然的以为一切都是为了应付考试，而忽略了学科本身的重要性，不清楚为什么要学，只知道学好就能考好，考好就能让以后的生活变得更好，这样的状态去学习东西本身就是被动的，无趣的。还记得大学时期学院有个政策，过了四级就可以申请免修英语，而原本英语水平很差的我那次居然破天荒的踩着线就过了，想着可以免修，想着以后再也不用上这么无趣的英语课，打心眼里觉得太开心了，头也不回的和一群人跑去申请免修。那时候的自己，压根不知道学好英语是多么重要，以为自己学的是计算机专业，又不是英语专业，那学不学好英语有什么关系，可是实际上英语真的没有什么用吗？后面步入社会，一系列的英文文档，犹如天文，虽然装了有道查词插件，但是看起文档也是晦涩难懂，每每看英文文档，都觉得及度困倦，可是迫于工作又只能硬着头皮上，打起十二分精神，跳过段落只看代码，最后虽然完成了任务，但是对于技术提升还是存在很大的瓶颈。还有数学，一直以来也是极度厌恶数学，因为幼时被老师批判，导致自己一直不喜欢数学，从小没有建立起学好数学的信心，就像是受了魔咒，就真的也是怎么都学不好，后面也是放弃了，爱咋咋滴，考试能过就行，总抱有以后工作了就会跳过这一关的心理。然而，后面工作了，想要自己做一些自定义动画函数，要用到贝塞尔曲线的时候，脑海里一通搜索，似乎都快要想不起高等数学里面还曾出现过贝塞尔曲线这样的名词。实际上所有的学科，只要存在，就有存在的价值，技多不压身，书到用时方恨少，出来社会，才会觉得自己过去多么涣散，对自己的要求多么低，多么不上进。</p><p></p>\n<p>今年是毕业的第三个年头，前面两年还都是处于浑浑噩噩得过且过的状态，其实自己也知道这种状态极度不好，也在慢慢尝试去改变。之前一直在构想用node去开发一个个人网站，写博客，然后沉淀自己的基础库，但是迫于能力还非常有限，担心还没做一半就被困难绞杀在途中，所以还是决定先用github+hexo搭建一个个人博客，一个是记录学到的东西，时间久了也能翻出来看一看，谨防忘记，再者也能培养一种写作习惯，写的过程中需要思考，也能加深理解。以前想做很多事情都坚持不了多久就放弃了，希望这次能够一直坚持下去，在这里立个几个flag：\n\n<ul>\n<li>每周都要更新博客</li>\n<li>每系统学习一项技术之后都要写一个demo，并上传到github</li>\n</ul>\n</p>","categories":["category"],"tags":["随笔"]},{"title":"about","url":"http://yoursite.com/about/index.html","content":"","categories":[],"tags":[]},{"title":"category","url":"http://yoursite.com/category/index.html","content":"","categories":[],"tags":[]},{"title":"link","url":"http://yoursite.com/link/index.html","content":"<p>link:</p>\n<ul>\n<li>name: 织网<br>info: 身体和灵魂，总有一个在路上<br>url: <a href=\"http://zheng-ji.info/\" target=\"_blank\" rel=\"noopener\">http://zheng-ji.info/</a><br>avatar: <a href=\"https://avatars3.githubusercontent.com/u/1414745?v=3&amp;s=460\" target=\"_blank\" rel=\"noopener\">https://avatars3.githubusercontent.com/u/1414745?v=3&amp;s=460</a></li>\n<li>name: Dongyado<br>info: 生命不止，折腾不息<br>url: <a href=\"http://dongyado.com/\" target=\"_blank\" rel=\"noopener\">http://dongyado.com/</a><br>avatar: <a href=\"https://avatars0.githubusercontent.com/u/6274940?v=3&amp;s=460\" target=\"_blank\" rel=\"noopener\">https://avatars0.githubusercontent.com/u/6274940?v=3&amp;s=460</a></li>\n<li>name: OrangeCoder<br>info: android ffmpeg nodejs gradle<br>url: <a href=\"http://orangecoder.com/\" target=\"_blank\" rel=\"noopener\">http://orangecoder.com/</a><br>avatar: <a href=\"https://avatars0.githubusercontent.com/u/2263785?v=3&amp;s=460\" target=\"_blank\" rel=\"noopener\">https://avatars0.githubusercontent.com/u/2263785?v=3&amp;s=460</a></li>\n<li>name: EverET<br>info: 好记性不如烂笔头<br>url: <a href=\"http://everet.org/about-me/\" target=\"_blank\" rel=\"noopener\">http://everet.org/about-me/</a><br>avatar: <a href=\"https://avatars1.githubusercontent.com/u/1559563?v=3&amp;s=460\" target=\"_blank\" rel=\"noopener\">https://avatars1.githubusercontent.com/u/1559563?v=3&amp;s=460</a></li>\n</ul>\n","categories":[],"tags":[]},{"title":"tag","url":"http://yoursite.com/tag/index.html","content":"","categories":[],"tags":[]},{"title":"search","url":"http://yoursite.com/search/index.html","content":"","categories":[],"tags":[]}]